#!/bin/env bash

readonly my_dir="$(dirname $(realpath $0))"
readonly launcher="${my_dir}/open-url-in-container/bin/launcher.sh"

# https://stackoverflow.com/a/45977232
#
# Following regex is based on https://www.rfc-editor.org/rfc/rfc3986#appendix-B with
# additional sub-expressions to split authority into userinfo, host and port
#
readonly URI_REGEX='^(([^:/?#]+):)?(//((([^:/?#]+)@)?([^:/?#]+)(:([0-9]+))?))?(/([^?#]*))?(\?([^#]*))?(#(.*))?'
#                    ↑↑            ↑  ↑↑↑            ↑         ↑ ↑            ↑ ↑         ↑  ↑        ↑ ↑
#                    |2 scheme     |  ||6 userinfo   7 host    | 9 port       | 11 rpath  |  13 query | 15 fragment
#                    1 scheme:     |  |5 userinfo@             8 :…           10 path     12 ?…       14 #…
#                                  |  4 authority
#                                  3 //…

# I added ? at the end of (/([^?#]*))? because it was not getting host without / (ex. "http://www.google.com")
#                         ↑ ↑         
#                         | 11 rpath  
#                         10 path     

parse_host () {
    [[ "$@" =~ $URI_REGEX ]] && echo "${BASH_REMATCH[7]}"
}

parse_main_domain() {
    awk -v host=$(parse_host "$@") '
        /^[:space:]*$/ {next}
        {
            sub(/[:space:]*\/\/.*$/, "")    # remove // comments
            pattern="\\." $0 "$"
            sub_domain=gensub(pattern, "", 1, host)
            if (host != sub_domain) {
                main_domain=gensub(/^.+\./, "", 1, sub_domain)
                print main_domain
                exit
            }
        }
    ' ${my_dir}/publicsuffix/list/public_suffix_list.dat
}

# https://emmer.dev/blog/hash-a-string-to-a-number-in-bash/
# @param {string} $1 String to hash to a positive number
stringsum() {
    echo "${2:-md5sum,md5}" | tr ',' '\n' | while read -r cmd; do
        if command -v "${cmd}"; then
            num=$(( 0x$(echo "$1" | command "${cmd}" | cut -d ' ' -f 1 | head -c 15) ))
            [[ $num -lt 0 ]] && num=$((num * -1))
            echo $num
            return 0
        fi
    done
    return 1
}

colors=(--blue --turquoise --green --yellow --orange --red --pink --purple)
icons=(--fingerprint --briefcase --dollar --cart --circle --gift --vacation --food --fruit --pet --tree --chill)
bypass_options=(-n --name "${colors[@]}" "${icons[@]}")
for a in "$@"
do
    if [[ " ${bypass_options[@]} " =~ " $a " || "$a" = "--name=*" ]]
    then
        exec "$launcher" "$@"
    fi
done

na=()
for a in "$@"
do
    if [[ "$a" = -* ]]
    then
        na+=("$a")
    else
        name="$(parse_main_domain "$a")"
        color_index=$(( "$(stringsum "$name")
        na+=(-n "${name}" "$a")
    fi
done

exec "$launcher" "${na[@]}"
